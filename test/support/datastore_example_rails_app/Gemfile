source 'https://rubygems.org'
ruby '2.3.3'

gem 'rails', '~> 5.0.2'
gem 'sass-rails', '~> 5.0'
gem 'uglifier', '>= 1.3.0'
gem 'coffee-rails', '~> 4.2'

gem 'jquery-rails'
gem 'turbolinks', '~> 5'

gem 'puma', '3.8.2'
gem 'rack-timeout'

gem 'activemodel-datastore', path: File.expand_path('../../../..', __FILE__)

gem 'grpc', '1.2.0'
# gem 'grpc', '1.2.2'

group :development, :test do
  gem 'byebug'
end

group :development do
  gem 'web-console', '>= 3.3.0'
  gem 'listen'
  gem 'better_errors'
  gem 'spring'
  gem 'spring-watcher-listen'
  gem 'derailed_benchmarks'
end

group :test do
  gem 'minitest-reporters'
  gem 'capybara'
  gem 'selenium-webdriver'
  gem 'faker'
  gem 'factory_girl'
end

# I have created a simplified Rails 5 app that uses the `derailed` gem to show the memory usage.
# It uses an actual cloud datastore instance, authenticated locally through gcloud auth login.
# Clone the grpc-1.2.2-memory branch.
# $ cd test/support/datastore_example_rails_app
# $ bundle
# Check if app is connecting to datastore by running:
# $ RAILS_ENV=production GCLOUD_PROJECT=project-id-goes-here rails server
# Navigate to localhost:3000 with a browser.
# Create a few users.
# Run this command but substitute your datastore project ID.
# $ DERAILED_SKIP_ACTIVE_RECORD=true PATH_TO_HIT=/users GCLOUD_PROJECT=project-id-goes-here TEST_COUNT=5000 bundle exec derailed exec perf:mem_over_time
# The profile will take about 15 minutes.
# Change the version of grpc to 1.2.2 in the Gemfile.
# $ bundle update
# Run the derailed command again to compare.